#!/bin/bash

### BEGIN INIT INFO
# Provides:        shl-mcs
# Required-Start:  $network $local_fs
# Required-Stop:   none
# Default-Start:   2 3 4 5
# Default-Stop:    0 1 6
# Short-Description: Start the shelter MCS server
### END INIT INFO

. /lib/lsb/init-functions

SERVICE_NAME='shl-mcs'
EXEC_PATH='/lwa/software/'
EXEC_OPTS='-c /lwa/software/defaults.cfg -d -l /lwa/runtime/runtime.log'

start() {
	log_daemon_msg "Starting SHL MCS"
	logfile=`tempfile -p shl-mcs-`
	if cd $EXEC_PATH && DISPLAY=:0.0 screen -d -m -S SHL_MCS ./shl_cmnd.py $EXEC_OPTS > $logfile 2>&1; then
		log_end_msg 0 || true
	else
		log_end_msg 1 || true
		cat $logfile
	fi
	rm -f $logfile
}

stop() {
	log_daemon_msg "Stopping SHL MCS"
	logfile=`tempfile -p shl-mcs-`
	if ps aux | grep 'shl_cmnd.py' | grep -v grep | grep -v -i screen | awk '{print $2}' | xargs kill > $logfile 2>&1; then
		save_runtime_log
		log_end_msg 0 || true
	else
		log_end_msg 1 || true
		cat $logfile
	fi
	rm -f $logfile
}

status() {
	output=`ps aux | grep "shl_cmnd.py" | grep -v grep | grep -v -i screen`
	if [ "$output" != "" ]; then
		procs=`echo "$output" | awk '{print $2}' | sed -e ':a;{N;s/\n/ /;ba}' `
		echo "$SERVICE_NAME start/running, process $procs"
	else
		echo "not running"
	fi
}

wait_socket_clear() {
	log_daemon_msg "Waiting 60s for sockets to clear"
	sleep 60
	log_end_msg 0 || true
}

case "$1" in
	start)
		check_self
		start
		;;
	stop)
		stop
		;;
	status)
		status
		;;
	restart|reload)
		stop
		wait_socket_clear
		start
		;;
	*)
		echo $"Usage $0 {start|stop|restart|reload|status}"
		exit 1
esac

exit 0
